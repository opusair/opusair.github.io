[
  {
    "id": "hackernews_45519575",
    "source": "Hacker News",
    "url": "https://www.hagerty.com/media/advice/a-few-things-to-know-before-you-steal-my-914/",
    "title": "A few things to know before stealing my 914 (2022)",
    "summary": "This article, titled 'A few things to know before stealing my 914', delves into practical considerations for vehicle security, particularly for classic cars like the Porsche 914. While directly addressing theft prevention tactics, the underlying principles touch upon areas where advanced data analytics and artificial intelligence could offer significant enhancements. For instance, predictive models trained on historical theft data could identify high-risk locations and patterns, enabling owners to proactively secure their assets. Furthermore, AI-powered systems could integrate with telematics to monitor unusual activities, learn owner behavior, and trigger alerts or activate countermeasures more effectively than traditional alarms. This approach transforms static security measures into dynamic, intelligent systems capable of adapting to emerging threats, thereby demonstrating the broader applicability of AI in real-world security challenges beyond typical digital domains, extending to physical asset protection and risk mitigation.",
    "keywords": [
      "Automotive Security",
      "Predictive Analytics",
      "Machine Learning",
      "Risk Assessment",
      "Telematics",
      "AI Applications"
    ],
    "area": [
      "Artificial Intelligence",
      "Machine Learning",
      "AI Agent"
    ],
    "published_time": "2025-10-08 19:16:10",
    "download_time": "2025-10-08 20:01:47",
    "extra_info": "{\"score\": 43, \"by\": \"visviva\", \"descendants\": 9, \"story_id\": 45519575}"
  },
  {
    "id": "hackernews_45516584",
    "source": "Hacker News",
    "url": "https://www.npmjs.com/package/@joseairosa/recall",
    "title": "Show HN: Recall: Give Claude memory with Redis-backed persistent context",
    "summary": "José has launched \"Recall,\" an MCP (Model Context Protocol) server designed to provide persistent memory for large language models like Claude, addressing the common issue of conversational context limits. Developers often face the challenge of repeatedly explaining architectural details and coding standards in each new session, leading to lost context. Recall leverages Redis and semantic search to store and retrieve \"memories\" – important conversational context. These memories are embedded using OpenAI's technology and stored in Redis with associated metadata. The system automatically retrieves relevant information, enabling Claude to maintain a long-term, evolving understanding across multiple sessions, projects, and even different machines when utilizing cloud-based Redis. Key features include the ability to share context globally across projects and establish relationships between memories. This solution enhances the practical applicability of LLMs by overcoming significant context management hurdles.",
    "keywords": [
      "Claude",
      "Large Language Model",
      "Persistent Memory",
      "Redis",
      "Semantic Search",
      "OpenAI Embeddings",
      "Context Management",
      "AI Agent"
    ],
    "area": [
      "Artificial Intelligence",
      "Large Language Model",
      "AI Agent"
    ],
    "published_time": "2025-10-08 14:28:06",
    "download_time": "2025-10-08 20:01:38",
    "extra_info": "{\"score\": 98, \"by\": \"elfenleid\", \"descendants\": 52, \"story_id\": 45516584}"
  },
  {
    "id": "hackernews_45518861",
    "source": "Hacker News",
    "url": "https://github.com/built-by-as/FleetCode",
    "title": "Show HN: FleetCode – Open-source UI for running multiple coding agents",
    "summary": "FleetCode, an innovative open-source user interface, has been launched to significantly enhance the management and parallel execution of multiple command-line interface (CLI) coding agents. The project creator, who initially harbored skepticism towards coding agents, ultimately discovered their productivity potential through parallel operation but faced considerable workflow inefficiencies with existing solutions. These challenges included overly convoluted interfaces, outright non-functional products, and a tendency for tools to integrate proprietary chat UIs rather than simply wrapping terminal sessions. FleetCode aims to resolve these issues by leveraging Git worktrees, which enable developers to run multiple agents concurrently within isolated, dedicated environments. This approach eliminates the need for cumbersome practices like frequent Git stashing and complex branch fumbling. By providing a lightweight and ergonomic platform, FleetCode empowers developers to more effectively integrate and utilize AI-driven coding assistance, thereby streamlining multi-agent development workflows. The project is free and open-source, actively seeking community feedback to further refine its capabilities.",
    "keywords": [
      "FleetCode",
      "Open-source",
      "Coding agents",
      "UI",
      "Git worktrees",
      "Multi-agent workflow",
      "Developer tools"
    ],
    "area": [
      "AI Agent",
      "Artificial Intelligence",
      "Large Language Model"
    ],
    "published_time": "2025-10-08 18:00:34",
    "download_time": "2025-10-08 20:01:41",
    "extra_info": "{\"score\": 23, \"by\": \"asdev\", \"descendants\": 8, \"story_id\": 45518861}"
  },
  {
    "id": "hackernews_45516426",
    "source": "Hacker News",
    "url": "https://blog.google/technology/developers/gemini-cli-extensions/",
    "title": "Now open for building: Introducing Gemini CLI extensions",
    "summary": "Google has officially announced the launch of Gemini CLI extensions, opening new avenues for developers to integrate and build upon the Gemini artificial intelligence model. This initiative allows users to leverage the power of Gemini directly from their command line interface, facilitating enhanced automation, custom tool creation, and streamlined integration into existing development workflows. The introduction of these extensions signifies a strategic move by Google to foster a more open and extensible ecosystem around its flagship AI model, enabling developers to create bespoke solutions and unique applications that harness its multimodal capabilities. This development is expected to empower a broader range of technical users, from individual developers to enterprise teams, to harness Gemini's functionalities more efficiently and innovatively, driving further advancements in AI-powered applications and services. The CLI extensions aim to simplify interactions with the Gemini API, making advanced AI functionalities more accessible for practical, day-to-day development tasks, rapid prototyping, and integrating AI into custom scripts and tools. This move underscores Google's commitment to developer enablement and expanding the utility of its advanced AI offerings.",
    "keywords": [
      "Gemini",
      "CLI extensions",
      "AI development",
      "Developer tools",
      "Google AI",
      "API integration"
    ],
    "area": [
      "Artificial Intelligence",
      "Large Language Model",
      "AI Agent"
    ],
    "published_time": "2025-10-08 14:13:30",
    "download_time": "2025-10-08 20:01:42",
    "extra_info": "{\"score\": 85, \"by\": \"meetpateltech\", \"descendants\": 14, \"story_id\": 45516426}"
  },
  {
    "id": "hackernews_45515640",
    "source": "Hacker News",
    "url": "https://paid.ai/blog/ai-agents/paid-gitlaw-introducing-legal-contracts-built-for-ai-agents",
    "title": "Legal Contracts Built for AI Agents",
    "summary": "This story introduces a new paradigm for legal agreements, specifically designed to govern the operations and interactions of artificial intelligence agents. The initiative, spearheaded by Paid.AI and dubbed \"GitLaw,\" aims to provide a robust framework of legal contracts that are intelligible and enforceable within an AI-driven ecosystem. These specialized contracts address the unique challenges posed by autonomous AI agents, including issues of accountability, responsibility, and the legal implications of their decisions and actions. By structuring legal agreements in a machine-readable and actionable format, GitLaw seeks to facilitate secure and compliant collaboration between AI agents, as well as between AI agents and human entities. This development marks a significant step towards establishing a functional legal infrastructure for the burgeoning field of autonomous AI, enabling complex transactions and safeguarding against potential disputes in a future where AI agents play a more prominent role in commercial and social activities.",
    "keywords": [
      "AI Agents",
      "Legal Contracts",
      "Autonomous Systems",
      "AI Governance",
      "LegalTech",
      "Digital Contracts",
      "Machine-Readable Contracts"
    ],
    "area": [
      "Artificial Intelligence",
      "AI Agent",
      "Natural Language Processing"
    ],
    "published_time": "2025-10-08 12:55:01",
    "download_time": "2025-10-08 20:02:07",
    "extra_info": "{\"score\": 61, \"by\": \"arnon\", \"descendants\": 40, \"story_id\": 45515640}"
  },
  {
    "id": "hackernews_45519161",
    "source": "Hacker News",
    "url": "https://www.theregister.com/2025/10/08/more_researchers_use_ai_few_confident/",
    "title": "AI gets more 'meh' as you get to know it better",
    "summary": "The article, titled \"AI gets more 'meh' as you get to know it better,\" suggests an emergent trend where increased exposure and hands-on experience with artificial intelligence technologies lead to a more tempered and less enthusiastic outlook among researchers and practitioners. This observation, also hinted by the URL's reference to \"more researchers use AI, few confident,\" suggests a significant divergence between the prevalent public hype surrounding AI and the practical realities encountered by those deeply involved in its development and application. Direct engagement with AI systems, from experimental models to production deployments, frequently uncovers inherent limitations, scalability issues, and ethical complexities that tend to moderate initial optimism. This evolving perspective within the expert community signals a crucial shift towards a more pragmatic and realistic assessment of AI's current capabilities, potential for disruption, and the formidable challenges still to be addressed. It underscores the imperative for cultivating realistic expectations and adopting a critically informed approach to AI research, development, and deployment strategies.",
    "keywords": [
      "AI confidence",
      "AI researcher perspective",
      "AI disillusionment",
      "Technological realism",
      "AI development challenges",
      "AI application assessment"
    ],
    "area": [
      "Artificial Intelligence",
      "Machine Learning",
      "Large Language Model"
    ],
    "published_time": "2025-10-08 18:32:04",
    "download_time": "2025-10-08 20:02:27",
    "extra_info": "{\"score\": 24, \"by\": \"rntn\", \"descendants\": 6, \"story_id\": 45519161}"
  },
  {
    "id": "stagehand",
    "source": "GitHub",
    "url": "https://github.com/browserbase/stagehand",
    "title": "The AI Browser Automation Framework",
    "summary": "Stagehand is an innovative AI browser automation framework designed to bridge the gap between low-level coding tools like Selenium/Playwright and high-level, often unpredictable, AI agents. It empowers developers to strategically combine code and natural language for robust production-ready automations. Key features include the flexibility to choose between code-based Playwright interactions and AI-driven navigation on unfamiliar pages. Stagehand also offers action previewing and caching to enhance reliability, save time, and optimize token usage. Furthermore, it simplifies the integration of state-of-the-art computer use models from providers like OpenAI and Anthropic, allowing complex browser tasks to be executed with a single line of code. The framework also provides powerful data extraction capabilities, enabling developers to precisely define and retrieve structured information from web pages using natural language instructions and schemas. This approach makes Stagehand a versatile and reliable choice for developing advanced web automation workflows.",
    "keywords": [
      "Browser Automation",
      "AI Agents",
      "Playwright",
      "Natural Language Processing",
      "Large Language Model",
      "Web Scraping",
      "Automation Framework",
      "Computer Vision"
    ],
    "area": [
      "Artificial Intelligence",
      "Large Language Model",
      "AI Agent"
    ],
    "published_time": "2025-10-08T00:49:22Z",
    "download_time": "2024-05-15 11:23:45",
    "extra_info": null
  },
  {
    "id": "zen-mcp-server",
    "source": "GitHub",
    "url": "https://github.com/BeehiveInnovations/zen-mcp-server",
    "title": "Zen MCP: Many Workflows. One Context.",
    "summary": "Zen MCP is a Model Context Protocol server designed to supercharge AI developer tools by orchestrating multiple AI models within a single CLI workflow. It allows users to integrate popular CLIs like Gemini, Claude Code, and Codex with various AI models from providers such as OpenAI, Anthropic, Google, and more. A key feature is `clink`, a CLI-to-CLI bridge enabling the creation of isolated subagents for tasks like code reviews or bug hunting, ensuring context isolation and role specialization without polluting the main session. Zen MCP facilitates true AI collaboration through conversation continuity, multi-model debates, and context revival, providing enhanced code analysis, planning, and collaborative development. It includes core tools for code quality, collaboration, and development, offering capabilities like automatic model selection, extended context windows, and vision support, thereby boosting developer productivity and insight.",
    "keywords": [
      "AI Orchestration",
      "Multi-model AI",
      "CLI Tool",
      "AI Agent",
      "Code Review",
      "Context Management",
      "Large Language Model",
      "Developer Tools"
    ],
    "area": [
      "Artificial Intelligence",
      "AI Agent",
      "Large Language Model"
    ],
    "published_time": "2025-10-08T07:20:01Z",
    "download_time": "2024-05-16 09:30:00",
    "extra_info": null
  },
  {
    "id": "2510.04871",
    "source": "huggingface",
    "url": "https://huggingface.co/papers/2510.04871",
    "title": "Less is More: Recursive Reasoning with Tiny Networks",
    "summary": "Hierarchical Reasoning Model (HRM) is a novel approach using two small neural networks recursing at different frequencies. This biologically inspired method beats Large Language models (LLMs) on hard puzzle tasks such as Sudoku, Maze, and ARC-AGI while trained with small models (27M parameters) on small data (around 1000 examples). HRM holds great promise for solving hard problems with small networks, but it is not yet well understood and may be suboptimal. We propose Tiny Recursive Model (TRM), a much simpler recursive reasoning approach that achieves significantly higher generalization than HRM, while using a single tiny network with only 2 layers. With only 7M parameters, TRM obtains 45% test-accuracy on ARC-AGI-1 and 8% on ARC-AGI-2, higher than most LLMs (e.g., Deepseek R1, o3-mini, Gemini 2.5 Pro) with less than 0.01% of the parameters.",
    "keywords": [
      "Recursive Reasoning",
      "Tiny Networks",
      "Hierarchical Reasoning Model",
      "Large Language Models",
      "ARC-AGI"
    ],
    "area": [
      "Artificial Intelligence",
      "Deep Learning",
      "Large Language Model"
    ],
    "published_time": "2025-10-06T14:58:08.000Z",
    "download_time": "2025-10-08 13:02:43",
    "extra_info": "{\"url\": \"https://huggingface.co/papers/2510.04871\", \"arxiv_url\": \"https://arxiv.org/abs/2510.04871\", \"thumbnail\": \"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2510.04871.png\", \"original_title\": \"Less is More: Recursive Reasoning with Tiny Networks\"}"
  },
  {
    "id": "2510.05592",
    "source": "huggingface",
    "url": "https://huggingface.co/papers/2510.05592",
    "title": "In-the-Flow Agentic System Optimization for Effective Planning and Tool Use",
    "summary": "Outcome-driven reinforcement learning has advanced reasoning in large language models (LLMs), but prevailing tool-augmented approaches train a single, monolithic policy that interleaves thoughts and tool calls under full context; this scales poorly with long horizons and diverse tools and generalizes weakly to new scenarios. Agentic systems offer a promising alternative by decomposing work across specialized modules, yet most remain training-free or rely on offline training decoupled from the live dynamics of multi-turn interaction. We introduce AgentFlow, a trainable, in-the-flow agentic framework that coordinates four modules (planner, executor, verifier, generator) through an evolving memory and directly optimizes its planner inside the multi-turn loop. To train on-policy in live environments, we propose Flow-based Group Refined Policy Optimization (Flow-GRPO), which tackles long-horizon, sparse-reward credit assignment by converting multi-turn optimization into a sequence of tractable single-turn policy updates. It broadcasts a single, verifiable trajectory-level outcome to every turn to align local planner decisions with global success and stabilizes learning with group-normalized advantages. Across ten benchmarks, AgentFlow with a 7B-scale backbone outperforms top-performing baselines with average accuracy gains of 14.9% on search, 14.0% on agentic, 14.5% on mathematical, and 4.1% on scientific tasks, even surpassing larger proprietary models like GPT-4o. Further analyses confirm the benefits of in-the-flow optimization, showing improved planning, enhanced tool-calling reliability, and positive scaling with model size and reasoning turns.",
    "keywords": [
      "Agentic Systems",
      "Large Language Models",
      "Reinforcement Learning",
      "Tool Use",
      "Policy Optimization"
    ],
    "area": [
      "Large Language Model",
      "AI Agent",
      "Machine Learning"
    ],
    "published_time": "2025-10-07T05:32:44.000Z",
    "download_time": "2025-10-08 13:02:46",
    "extra_info": "{\"url\": \"https://huggingface.co/papers/2510.05592\", \"arxiv_url\": \"https://arxiv.org/abs/2510.05592\", \"thumbnail\": \"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2510.05592.png\", \"original_title\": \"In-the-Flow Agentic System Optimization for Effective Planning and Tool\\n  Use\"}"
  },
  {
    "id": "2510.06107",
    "source": "huggingface",
    "url": "https://huggingface.co/papers/2510.06107",
    "title": "Distributional Semantics Tracing: A Framework for Explaining Hallucinations in Large Language Models",
    "summary": "Large Language Models (LLMs) are prone to hallucination, the generation of plausible yet factually incorrect statements. This work investigates the intrinsic, architectural origins of this failure mode through three primary contributions.First, to enable the reliable tracing of internal semantic failures, we propose Distributional Semantics Tracing (DST), a unified framework that integrates established interpretability techniques to produce a causal map of a model's reasoning, treating meaning as a function of context (distributional semantics). Second, we pinpoint the model's layer at which a hallucination becomes inevitable, identifying a specific commitment layer where a model's internal representations irreversibly diverge from factuality. Third, we identify the underlying mechanism for these failures. We observe a conflict between distinct computational pathways, which we interpret using the lens of dual-process theory: a fast, heuristic associative pathway (akin to System 1) and a slow, deliberate contextual pathway (akin to System 2), leading to predictable failure modes such as Reasoning Shortcut Hijacks. Our framework's ability to quantify the coherence of the contextual pathway reveals a strong negative correlation (rho = -0.863) with hallucination rates, implying that these failures are predictable consequences of internal semantic weakness. The result is a mechanistic account of how, when, and why hallucinations occur within the Transformer architecture.",
    "keywords": [
      "Large Language Models",
      "Hallucinations",
      "Distributional Semantics Tracing",
      "Interpretability",
      "Transformer architecture"
    ],
    "area": [
      "Large Language Model",
      "Deep Learning",
      "Natural Language Processing"
    ],
    "published_time": "2025-10-07T16:40:31.000Z",
    "download_time": "2025-10-08 13:02:49",
    "extra_info": "{\"url\": \"https://huggingface.co/papers/2510.06107\", \"arxiv_url\": \"https://arxiv.org/abs/2510.06107\", \"thumbnail\": \"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2510.06107.png\", \"original_title\": \"Distributional Semantics Tracing: A Framework for Explaining\\n  Hallucinations in Large Language Models\"}"
  },
  {
    "id": "2510.06208",
    "source": "huggingface",
    "url": "https://huggingface.co/papers/2510.06208",
    "title": "ShapeGen4D: Towards High Quality 4D Shape Generation from Videos",
    "summary": "Video-conditioned 4D shape generation aims to recover time-varying 3D geometry and view-consistent appearance directly from an input video. In this work, we introduce a native video-to-4D shape generation framework that synthesizes a single dynamic 3D representation end-to-end from the video. Our framework introduces three key components based on large-scale pre-trained 3D models: (i) a temporal attention that conditions generation on all frames while producing a time-indexed dynamic representation; (ii) a time-aware point sampling and 4D latent anchoring that promote temporally consistent geometry and texture; and (iii) noise sharing across frames to enhance temporal stability. Our method accurately captures non-rigid motion, volume changes, and even topological transitions without per-frame optimization. Across diverse in-the-wild videos, our method improves robustness and perceptual fidelity and reduces failure modes compared with the baselines.",
    "keywords": [
      "4D Shape Generation",
      "Video-conditioned Generation",
      "Dynamic 3D Representation",
      "Temporal Consistency",
      "Non-rigid Motion"
    ],
    "area": [
      "Computer Vision",
      "Generative AI",
      "Deep Learning"
    ],
    "published_time": "2025-10-07T17:58:11.000Z",
    "download_time": "2025-10-08 13:02:42",
    "extra_info": "{\"url\": \"https://huggingface.co/papers/2510.06208\", \"arxiv_url\": \"https://arxiv.org/abs/2510.06208\", \"thumbnail\": \"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2510.06208.png\", \"original_title\": \"ShapeGen4D: Towards High Quality 4D Shape Generation from Videos\"}"
  },
  {
    "id": "2510.05396",
    "source": "huggingface",
    "url": "https://huggingface.co/papers/2510.05396",
    "title": "Scalable In-context Ranking with Generative Models",
    "summary": "In-context Ranking (ICR) is an emerging paradigm for Information Retrieval (IR), which leverages contextual understanding of LLMs by directly incorporating the task description, candidate documents, and the query into the model's input prompt and tasking the LLM to identify relevant document(s). While it is effective, efficiency is a significant challenge in this paradigm, especially as the candidate list grows due to quadratic/super-linear scaling of attention operation with context length. To this end, this paper first identifies inherent and exploitable structures in the attention of LLMs finetuned for ICR: (1) inter-document block sparsity: attention is dense within each document block but sparse across different documents in the context; and (2) query-document block relevance: the attention scores from certain query tokens to a document block in middle layers strongly correlate with that document's actual relevance. Motivated by these observations, we introduce BlockRank (Blockwise In-context Ranking), a novel method that adapts the attention operation in an LLM by (a) architecturally enforcing the observed inter-document block sparsity, reducing attention complexity from quadratic to linear without loss in performance, and (b) optimizing query-document block relevance for true relevant documents during fine-tuning using an auxiliary contrastive training objective, improving retrieval in attention. Experiments on BEIR, MSMarco and NQ with Mistral-7B demonstrate that FLARE Mistral matches or outperforms existing SOTA listwise rankers and controlled fine-tuned baseline while being significantly more efficient at inference (4.7x for 100 MSMarco documents in context) and scaling gracefully to long-context shortlists, around 500 documents in-context (approximately 100K context length) within a second, presenting a scalable and effective solution for ICR.",
    "keywords": [
      "In-context Ranking",
      "Large Language Models",
      "Information Retrieval",
      "Attention mechanism",
      "Scalability"
    ],
    "area": [
      "Large Language Model",
      "Natural Language Processing",
      "Generative AI"
    ],
    "published_time": "2025-10-06T21:41:58.000Z",
    "download_time": "2025-10-08 13:02:49",
    "extra_info": "{\"url\": \"https://huggingface.co/papers/2510.05396\", \"arxiv_url\": \"https://arxiv.org/abs/2510.05396\", \"thumbnail\": \"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2510.05396.png\", \"original_title\": \"Scalable In-context Ranking with Generative Models\"}"
  },
  {
    "id": "2510.06131",
    "source": "huggingface",
    "url": "https://huggingface.co/papers/2510.06131",
    "title": "Discrete Diffusion Models with MLLMs for Unified Medical Multimodal Generation",
    "summary": "Recent advances in generative medical models are constrained by modality-specific scenarios that hinder the integration of complementary evidence from imaging, pathology, and clinical notes. This fragmentation limits their evolution into foundation models that can learn and reason across the full spectrum of biomedical data. We propose MeDiM, the first medical discrete diffusion model that learns shared distributions across modalities without modality-specific components. MeDiM unifies multiple generative tasks: translating between images and text, and jointly producing image-report pairs across domains in response to prompts. Built on a discrete diffusion framework, MeDiM bridges vision and language representations through a shared probabilistic space. To enable unified and flexible medical generation, we employ a multimodal large language model (MLLM) as the diffusion backbone, leveraging its prior knowledge and cross-modal reasoning. Two key designs are introduced: (1) removing the causal attention mask for bidirectional context, and (2) injecting continuous timestep embeddings for diffusion awareness. Experiments demonstrate high-fidelity medical generation (FID 16.60 on MIMIC-CXR and FID 24.19 on PathGen) and accurate report generation (METEOR 0.2650 and 0.2580). Jointly generated image-report pairs further enhance downstream performance (plus6.43 percent BLEU-1, plus18.57 percent BLEU-2, plus31.58 percent BLEU-3, plus4.80 percent METEOR), showing that MeDiM supports coherent and clinically grounded multimodal outputs.",
    "keywords": [
      "Discrete Diffusion Models",
      "Medical Multimodal Generation",
      "Multimodal Large Language Model",
      "Generative AI",
      "Cross-modal Reasoning"
    ],
    "area": [
      "Generative AI",
      "Multimodal",
      "Large Language Model"
    ],
    "published_time": "2025-10-07T17:06:57.000Z",
    "download_time": "2025-10-08 13:02:43",
    "extra_info": "{\"url\": \"https://huggingface.co/papers/2510.06131\", \"arxiv_url\": \"https://arxiv.org/abs/2510.06131\", \"thumbnail\": \"https://cdn-thumbnails.huggingface.co/social-thumbnails/papers/2510.06131.png\", \"original_title\": \"Discrete Diffusion Models with MLLMs for Unified Medical Multimodal\\n  Generation\"}"
  }
]